<style>
  input#coordinate {position:relative;; font-size:2em; padding:10px;z-index:888;top:80px;left:0;opacity:0.8; width:100%; text-align:center;border:1px #ccc solid;}
  
  </style>
<div class="card-body ">
  <div class="col-md-12 col-sm-12">
    
    <%= form_for @poi, url: @poi.id.present? ? admin_pois_path(@poi) : admin_pois_index_path, local: true do |form| %>
      <% if poi.errors.any? %>
        <div id="error_explanation">
          <h2><%= pluralize(poi.errors.count, "error") %> prohibited this poi from being saved:</h2>
          <ul>
            <% poi.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>
      <h4 class="title">Cover Image</h4>
      <div class="fileinput fileinput-new text-center" data-provides="fileinput">
        <div class="fileinput-new thumbnail">
          <img src="../../assets/img/image_placeholder.jpg" alt="...">
        </div>
        <div class="fileinput-preview fileinput-exists thumbnail"></div>
        <div>
          <span class="btn btn-rose btn-round btn-file">
            <span class="fileinput-new">Select image</span>
            <span class="fileinput-exists">Change</span>
            <%= form.file_field :avatar %>
          </span>
          <a href="#pablo" class="btn btn-danger btn-round fileinput-exists" data-dismiss="fileinput"><i class="fa fa-times"></i> Remove</a>
        </div>
      </div>
  </div>

  <h4 class="title">Images</h4>
  <div class="fileinput fileinput-new text-center" data-provides="fileinput">
    <div class="fileinput-new thumbnail">
      <img src="../../assets/img/image_placeholder.jpg" alt="...">
    </div>
    <div class="fileinput-preview fileinput-exists thumbnail"></div>
    <div>
      <span class="btn btn-rose btn-round btn-file">
        <span class="fileinput-new">Select image</span>
        <span class="fileinput-exists">Change</span>
        <%= form.file_field :images, multiple: true %>
      </span>
      <a href="#pablo" class="btn btn-danger btn-round fileinput-exists" data-dismiss="fileinput"><i class="fa fa-times"></i> Remove</a>
    </div>
  </div>

  <div class="form-group">
    <label class="bmd-label-floating">POI Name</label>
    <%= form.text_field :title, class: "form-control" %>
  </div>
  <div class="form-group">
    <label for="exampleEmail" class="bmd-label-floating">POI Description</label>
    <%= form.text_area :description, class: "form-control" %>
  </div>
  <div class="form-group">
    <label for="exampleEmail" class="bmd-label-floating">Popularity</label>
    <%= form.number_field :popular, class: "form-control" %>
  </div>

  <div class="form-group">
    <label for="exampleEmail" class="bmd-label-floating">Address</label>
    <%= form.text_field :address, class: "form-control" %>
  </div>

  <div class="form-group">
    <label for="exampleEmail" class="bmd-label-floating">city</label>
    <%= form.text_field :city, class: "form-control" %>
  </div>

  <div class="form-group">
    <label for="exampleEmail" class="bmd-label-floating">Country</label>
    <%= form.select :country_id, options_for_select(Country.pluck(:name,:id),@poi.country_id), {:prompt => "Select Country"}, {class: "form-control"}  %>
  </div>
  
  <%= form.hidden_field :lat %>
  <%= form.hidden_field :lng %>
  


  <div id="map-dashboard"></div>
  
  
  <h3>Landmarks</h3>
    <div id="landmarks">
      <%= form.fields_for :landmarks do |landmark| %>
        <%= render 'landmark_fields', f: landmark %>
      <% end %>
      <div class="links">
        <%= link_to_add_association 'add landmark', form, :landmarks %>
      </div>
    </div>
     
      <div class="card-footer ">
        <%= form.submit "Submit", class: "btn btn-primary" %>
      </div>
  
  <% end %>
  
    
  <script>
    var map;
    

    function initMap() {
        
        var myLatlng = new google.maps.LatLng(gon.lat, gon.lng);
        
        
        var mapOptions = {
            zoom: 12,
            center: myLatlng,
            zoomControl: true,
            disableDefaultUI: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById('map-dashboard'),mapOptions);
        var geocoder = new google.maps.Geocoder;
        var infowindow = new google.maps.InfoWindow;
        
        var marker = new google.maps.Marker({
          position: myLatlng,
          title:"Hello World!"
        });
        
       
        
        // To add the marker to the map, call setMap();
        marker.setMap(map);

        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function (position) {
            initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            map.setCenter(initialLocation);
          });
        }
        
        google.maps.event.addListener(map, 'click', function(event) {
          
          var latlng = {lat: parseFloat(event.latLng.lat()), lng: parseFloat(event.latLng.lng())};
          $('#poi_lat').val(event.latLng.lat());
          $('#poi_lng').val(event.latLng.lng());
          geocoder.geocode({'location': latlng}, function(results, status) {
                    if (status === 'OK') {
                      if (results[0]) {
                        map.setZoom(14);
                        map.setCenter(results[0].geometry.location);
                       
                        
                        var arrAddress = results[0].address_components;
                        var itemRoute='';
                        var itemLocality='';
                        var itemCountry='';
                        var itemPc='';
                        var itemSnumber='';

                        // iterate through address_component array
                        $.each(arrAddress, function (i, address_component) {
                            console.log('address_component:'+i);
                            console.log(address_component.long_name);
                            console.log(address_component.types[0])
                            
                            if (address_component.types[0] == "premise"){
                                console.log(i+": route:"+address_component.long_name);
                                itemRoute = address_component.long_name;
                                $('#poi_address').val(itemRoute);
                                $('#poi_address').parent().addClass('is-focused');
                            }

                            if (address_component.types[0] == "route"){
                                console.log(i+": route:"+address_component.long_name);
                                itemRoute = address_component.long_name;
                                $('#poi_address').val(itemRoute);
                                $('#poi_address').parent().addClass('is-focused');
                            }

                            if (address_component.types[0] == "locality"){
                                console.log("town:"+address_component.long_name);
                                itemLocality = address_component.long_name;
                                $('#poi_city').val(itemLocality);
                                $('#poi_city').parent().addClass('is-focused');
                            }

                            if (address_component.types[0] == "country"){ 
                                console.log("country:"+address_component.long_name); 
                                itemCountry = address_component.long_name;
                                $("#poi_country_id option:contains(" + itemCountry + ")").attr('selected', true);
                               
                            }

                            if (address_component.types[0] == "postal_code_prefix"){ 
                                console.log("pc:"+address_component.long_name);  
                                itemPc = address_component.long_name;
                            }

                            if (address_component.types[0] == "street_number"){ 
                                console.log("street_number:"+address_component.long_name);  
                                itemSnumber = address_component.long_name;
                            }
                            //return false; // break the loop   
                        });
                        
                        window.alert(results[0].formatted_address);
                        if (marker) {
                                //if marker already was created change positon
                                marker.setPosition(results[0].geometry.location);
                            } else {
                                //create a marker
                                marker = new google.maps.Marker({
                                    position: results[0].geometry.location,
                                    map: map,
                                    draggable: true
                                });
                                
                               
                            }
                      } else {
                        window.alert('No results found');
                      }
                    } else {
                      window.alert('Geocoder failed due to: ' + status);
                    }
                  });
                    
          //call function to create marker
          console.log(event.latLng.lat());
          console.log(event.latLng.lng());
          console.log(marker);
          //$("#landmark_lat").val(event.latLng.lat());
          //$("#landmark_lng").val(event.latLng.lng());
          //delete the old marker
          
              
         
        });
    }
    
    function placeMarker(location) {
      var marker = new google.maps.Marker({
          position: location, 
          map: map
      });
      console.log(location);
    }
  </script>
    
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDt6EKYip9qRaxIYB6cKQTXQYOnW_5Xs_A&callback=initMap"
    async defer></script>
    
    <script>
      $(document).ready(function() {
        // Initialise Sweet Alert library
        demo.showSwal();
      });
    </script>

